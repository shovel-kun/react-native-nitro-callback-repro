///
/// HybridTestViewSpecSwift.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include "HybridTestViewSpec.hpp"

// Forward declaration of `HybridTestViewSpec_cxx` to properly resolve imports.
namespace TestView { class HybridTestViewSpec_cxx; }



#include <functional>

#include "TestView-Swift-Cxx-Umbrella.hpp"

namespace margelo::nitro::testview {

  /**
   * The C++ part of HybridTestViewSpec_cxx.swift.
   *
   * HybridTestViewSpecSwift (C++) accesses HybridTestViewSpec_cxx (Swift), and might
   * contain some additional bridging code for C++ <> Swift interop.
   *
   * Since this obviously introduces an overhead, I hope at some point in
   * the future, HybridTestViewSpec_cxx can directly inherit from the C++ class HybridTestViewSpec
   * to simplify the whole structure and memory management.
   */
  class HybridTestViewSpecSwift: public virtual HybridTestViewSpec {
  public:
    // Constructor from a Swift instance
    explicit HybridTestViewSpecSwift(const TestView::HybridTestViewSpec_cxx& swiftPart):
      HybridObject(HybridTestViewSpec::TAG),
      _swiftPart(swiftPart) { }

  public:
    // Get the Swift part
    inline TestView::HybridTestViewSpec_cxx& getSwiftPart() noexcept {
      return _swiftPart;
    }

  public:
    // Get memory pressure
    inline size_t getExternalMemorySize() noexcept override {
      return _swiftPart.getMemorySize();
    }

  public:
    // Properties
    inline bool getIsRed() noexcept override {
      return _swiftPart.isRed();
    }
    inline void setIsRed(bool isRed) noexcept override {
      _swiftPart.setIsRed(std::forward<decltype(isRed)>(isRed));
    }
    inline std::function<void()> getOnColorChange() noexcept override {
      auto __result = _swiftPart.getOnColorChange();
      return __result;
    }
    inline void setOnColorChange(const std::function<void()>& onColorChange) noexcept override {
      _swiftPart.setOnColorChange(onColorChange);
    }

  public:
    // Methods
    

  private:
    TestView::HybridTestViewSpec_cxx _swiftPart;
  };

} // namespace margelo::nitro::testview
